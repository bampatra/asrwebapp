@*@model IEnumerable<ASRWebApp.Models.Slot>*@
@model ASRWebApp.Models.SlotAndStaff
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Student" asp-action="Booking">
    <p>
        <label for="date">Date</label><br />
        <input type="date" name="searchTime">

        <br /><label for="stafform">Staff</label>
        <select id="staffform" class="form-control" name="staffID" style="width:20%">
            @foreach (var x in Model.Staffs)
            {
                <option value="@x.StaffID">@x.Name</option>
            }
        </select>
        <br />
        <input type="submit" value="Search" />
    </p>
</form>

@{ if (ViewData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewData["ErrorMessage"]
        </div>
    }
    if (ViewData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @ViewData["SuccessMessage"]
        </div>
    }
}

@{if (ViewData["FromDate"] != null)
    {
        <h2>Staff @ViewData["StaffID"]'s available slots on @ViewData["FromDate"]</h2>
    }
    else
    {
        <h2> Select a date to see available slots </h2>
    }

}

<table class="table">
    <thead>
        <tr>
            <th>
                RoomID
            </th>
            <th>
                StaffID
            </th>
            <th>
                StudentID
            </th>
            <th>
                Start Time
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.Slots)
        {
            if (ViewData["FromDate"] != null)
            {
                if ((DateTime)ViewData["FromDate"] <= item.StartTime
                    && item.StartTime <= (DateTime)ViewData["ToDate"]
                    && item.StudentID == null && item.StaffID == (string)ViewData["StaffID"])
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Room.RoomID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Staff.StaffID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Student.StudentID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartTime)
                        </td>
                        <td>

                            @{
                                if (item.StudentID != null)
                                {
                                    <button type="button" class="btn btn-danger">
                                        @Html.ActionLink("Cancel Booking", "Booking", new { roomID = item.Room.RoomID, time = item.StartTime }, new { @style = "color:#ffffff;" })
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-primary">
                                        @Html.ActionLink("Book Slot", "Booking", new { roomID = item.Room.RoomID, time = item.StartTime, studentID = @UserManager.GetUserAsync(User).Result.StudentID }, new { @style = "color:#ffffff;" })
                                    </button>

                                }
                            }


                        </td>
                    </tr>
                }
            }

        }
    </tbody>
</table>
